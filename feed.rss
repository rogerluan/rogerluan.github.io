<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content"><channel><title>Roger Oba</title><description>Lead Mobile Engineer</description><link>https://roger.ml</link><language>en</language><lastBuildDate>Sun, 28 Feb 2021 22:37:27 -0300</lastBuildDate><pubDate>Sun, 28 Feb 2021 22:37:27 -0300</pubDate><ttl>250</ttl><atom:link href="https://roger.ml/feed.rss" rel="self" type="application/rss+xml"/><item><guid isPermaLink="true">https://roger.ml/posts/first-post</guid><title>Welcome to the new website!</title><description>First post in roger.ml new blogging website</description><link>https://roger.ml/posts/first-post</link><pubDate>Sun, 28 Feb 2021 12:00:00 -0300</pubDate><content:encoded><![CDATA[<h1>Welcome to the new website!</h1><p>This is the first post of this newly revamped website. I'm finally migrating off of Medium. Hooray! ðŸŽ‰</p><pre><code>infix operator ??=

<span class="keyword">extension</span> <span class="type">Swift</span>.<span class="type">Optional</span> {
    <span class="comment">/// This is the Optional Value Setter operator. It assigns a value to the receiving subject, only if
    /// the receiver is `nil`.
    /// When the receiver is not `nil`, the value on the right hand side won't be accessed or computed (as
    /// it's an `@autoclosure`). If the receiver already has `.some` value, no value will be assigned to it,
    /// thus `willSet` and `didSet` won't be called.
    ///
    /// - SeeAlso: the rejected proposal of this feature in Swift Evolution: https://github.com/apple/swift-evolution/blob/master/proposals/0024-optional-value-setter.md</span>
    <span class="keyword">public static func</span> ??=(lhs: <span class="keyword">inout</span> <span class="type">Self</span>&lt;<span class="type">Wrapped</span>&gt;, rhs: <span class="keyword">@autoclosure</span> () -&gt; <span class="type">Wrapped</span>) {
        <span class="keyword">guard case</span> .<span class="dotAccess">none</span> = lhs <span class="keyword">else</span> { <span class="keyword">return</span> }
        lhs = <span class="call">rhs</span>()
    }
}
</code></pre>]]></content:encoded></item></channel></rss>